%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
:};

%terminals ID, NUMERAL;
%terminals PLUS, MUL;
%terminals LPAR, RPAR;

%typeof program = "Program";

%typeof expression = "Expression";
%typeof factor = "Expression";
%typeof term = "Expression";

//%typeof id_declare = "IdDeclare";

%goal program;

program = expression.a {: return new Program(a); :} ;

expression =
    term
    | expression.expression PLUS term.term {:
        return new Add(expression, term);
    :}
    ;

term =
    term.term MUL factor.factor {:
      return new Mul(term, factor);
    :}
    | factor
    ;

factor =
    numeral
    | id_use
    | LPAR expression.expression RPAR {:
      return expression;
    :}
//    | id_declare
    ;


numeral = NUMERAL.num {:
        return new Numeral(num);
    :}
    ;

id_use = ID.id {:
    return new IdUse(id);
    :}
    ;
//
//id_declare = ID.id {:
//    return new IdDeclare(id);
//    :}
//    ;
