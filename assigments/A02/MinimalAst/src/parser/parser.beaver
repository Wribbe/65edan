%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
    public static boolean DEBUG = true;
    public static void debug(String string) {
        if (DEBUG) {
            System.out.println("[?] DEBUG: "+string);
        }
    }
:};

%terminals ID, INT, LPAR, RPAR, LBRA, RBRA;

%typeof program = "Program";
%typeof function = "Function";
%typeof function_list = "List";

%goal program;

program = function_list.a {: return new Program(a); :}
    ;

function = INT ID LPAR RPAR LBRA RBRA {: return new FunctionDeclaration(); :} ;

function_list =
    function.a {: return new List().add(a); :}
    | function_list.a function.b {: return a.add(b); :}
    ;
