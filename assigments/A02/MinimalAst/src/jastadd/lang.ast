Program ::= FunctionDeclaration*;

abstract Expression;
Expressions ::= Expression*;

BinaryExpression : Expression ::= Left:Expression Right:Expression;

Add : BinaryExpression;
Mul : BinaryExpression;

FunctionDeclaration ::= IdDeclare [FunctionParameters:List] [Block:Expressions];
FunctionUse : Expression ::= IdUse [FunctionParameters:List];

Assign : Expression ::= ID:IdExpression Value:Expression;
Return : Expression ::= Expression;

IF : Expression ::= Logic:LogicExpression [Block:Expressions];

abstract LogicExpression;
EQ : LogicExpression ::= IdUse Expression;

IdExpression : Expression;
IdUse : IdExpression ::= <ID>;
IdDeclare : IdExpression ::= <ID>;

Numeral : Expression ::= <NUMERAL>;
